{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["questionsArr","number","contents","App","useState","question","setQuestion","setNumber","className","onClick","randomIdx","Math","floor","random","length","value","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAKMA,EAAe,CACnB,CACEC,OAAQ,EACRC,SAAU,+EAEZ,CACED,OAAQ,EACRC,SAAU,2FAEZ,CACED,OAAQ,EACRC,SAAU,6MAEZ,CACED,OAAQ,EACRC,SAAU,sFAEZ,CACED,OAAQ,EACRC,SAAU,yEAEZ,CACED,OAAQ,EACRC,SAAU,sFAEZ,CACED,OAAQ,EACRC,SAAU,2JAEZ,CACED,OAAQ,EACRC,SAAU,+EAEZ,CACED,OAAQ,EACRC,SAAU,4FAEZ,CACED,OAAQ,GACRC,SAAU,gFAEZ,CACED,OAAQ,GACRC,SAAU,mIAEZ,CACED,OAAQ,GACRC,SAAU,mIAEZ,CACED,OAAQ,GACRC,SAAU,8IAEZ,CACED,OAAQ,GACRC,SAAU,sHAEZ,CACED,OAAQ,GACRC,SAAU,6HAEZ,CACED,OAAQ,GACRC,SAAU,mEAEZ,CACED,OAAQ,GACRC,SAAU,gJAEZ,CACED,OAAQ,GACRC,SAAU,qKAEZ,CACED,OAAQ,GACRC,SAAU,sMAEZ,CACED,OAAQ,GACRC,SAAU,qHAEZ,CACED,OAAQ,GACRC,SAAU,oLAEZ,CACED,OAAQ,GACRC,SAAU,yEAEZ,CACED,OAAQ,GACRC,SAAU,mIAoDCC,EA/CH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAAS,GAArC,mBAAOH,EAAP,KAAeM,EAAf,KASA,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,mBAAf,SACE,0HAEF,qBAAKA,UAAU,iBAAf,SACE,gCACE,2DACA,gGACA,4DAIN,0BAASA,UAAU,uBAAnB,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAQA,UAAU,aAAaC,QAxBtB,WACjB,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAASb,EAAac,QAExDR,EAAYN,EAAaU,GAAb,UACZH,EAAUP,EAAaU,GAAb,SAoBF,0BACA,iCACE,wBAAQK,MAAM,OAEhB,+EAEF,qBAAKP,UAAU,YAAf,SACE,mBAAGA,UAAU,qBAAqBQ,KAAK,QAAvC,wFAGJ,sBAAKR,UAAU,gBAAf,UACE,qBAAIA,UAAU,iBAAd,UAAgCP,EAAS,KAAzC,IAAgDI,KAChD,mBAAGG,UAAU,QAAb,6BCjIKS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.31b449ff.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport './App.css';\n\n\nconst questionsArr = [\n  {\n    number: 1,\n    contents: \"다크 투어리즘을 설명하세요.\"\n  },\n  {\n    number: 2,\n    contents: \"전주한옥마을에 대해 설명하세요.\"\n  },\n  {\n    number: 3,\n    contents: \"우리나의 최초의 국립공원과 가장 최근에 지정된 국립공원에 대해 설명하세요.\"\n  },\n  {\n    number: 4,\n    contents: \"우리나의 문화엔 어떤게 있나요.\"\n  },\n  {\n    number: 5,\n    contents: \"영상 관광이란 무엇인가요?\"\n  },\n  {\n    number: 6,\n    contents: \"가이드의 장점과 단점이 뭘까요?\"\n  },\n  {\n    number: 7,\n    contents: \"외국인이 한국인을 방문해야 하는 이유에 대해 설명하세요.\"\n  },\n  {\n    number: 8,\n    contents: \"사물놀이에 대해 설명하시오.\"\n  },\n  {\n    number: 9,\n    contents: \"에코 투어리즘에 대해 설명하세요.\"\n  },\n  {\n    number: 10,\n    contents: \"조선 왕릉에 대해 설명하세요.\"\n  },\n  {\n    number: 11,\n    contents: \"관통사의 의미는 무엇이며, 왜 지원하게 되었나요?\"\n  },\n  {\n    number: 12,\n    contents: \"관광이 지역 및 국가에 미치는 영향은 무엇인가요?\"\n  },\n  {\n    number: 13,\n    contents: \"외국인이 안 좋아하는 한국의 음식문화는 무엇인가요?\"\n  },\n  {\n    number: 14,\n    contents: \"경주 역사지구를 5개로 나누어서 설명하세요.\"\n  },\n  {\n    number: 15,\n    contents: \"김치에 대한 설명 및 특이점에 대해 설명하시오.\"\n  },\n  {\n    number: 16,\n    contents: \"추석에 대해 설명하시오.\"\n  },\n  {\n    number: 17,\n    contents: \"관광객이 점심 메뉴가 싫다고 하면 어떻게 하실 건가요?\"\n  },\n  {\n    number: 18,\n    contents: \"한류를 체험할 수 있는 관광지 2곳과 그 이유에 대해 설명하세요.\"\n  },\n  {\n    number: 19,\n    contents: \"관광통역안내사를 취득하고 싶은 이유는 무엇이고 추후 계획은 무엇인가요?\"\n  },\n  {\n    number: 20,\n    contents: \"Voluntary tourism의 예시와 그에 대한 생각을 말하시오.\"\n  },\n  {\n    number: 21,\n    contents: \"향후 여행환경도 변화될것 같은데, 가이드로서 어떻게하면 좋을까요?\"\n  },\n  {\n    number: 22,\n    contents: \"단오에 대해서 설명하세요.\"\n  },\n  {\n    number: 23,\n    contents: \"관광객이 여권을 분실하면 어떻게 대처할 건가요?\"\n  },\n];\n\n\nconst App = () => { \n  const [question, setQuestion] = useState('');\n  const [number, setNumber] = useState(0);\n\n  const randomPick = () => {\n    const randomIdx = Math.floor(Math.random()*questionsArr.length);\n\n    setQuestion(questionsArr[randomIdx][\"contents\"]);\n    setNumber(questionsArr[randomIdx][\"number\"]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-header-title\">\n          <h1>관광통역안내사 면접 시뮬레이터</h1>\n        </div>\n        <div className=\"App-header-nav\">\n          <nav>\n            <ul>개발자 Github</ul>\n            <ul>개발자 프로젝트 블로그</ul>\n            <ul>연락처</ul>\n          </nav>\n        </div>\n      </header>\n      <section className=\"App-contents-section\">\n        <div className=\"contents-nav-part\">\n          <div className=\"select-part\">\n            <button className=\"random-btn\" onClick={randomPick}>랜덤</button>\n            <select>\n              <option value=\"\"></option>\n            </select>\n            <button>선택 문제 보기</button>\n          </div>\n          <div className=\"list-part\">\n            <a className=\"question-list-href\" href=\"/list\">문제 번호-리스트 보러가기</a>\n          </div>\n        </div>\n        <div className=\"question-part\">\n          <h2 className=\"question-title\">{number + '. '} {question}</h2>\n          <p className=\"timer\">00:00</p>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}